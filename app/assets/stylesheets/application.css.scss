@import '@primer/css/index.scss';
@import 'simple_calendar';
// https://guides.rubyonrails.org/asset_pipeline.html#manifest-files-and-directives
@import '**/*';


.pagehead {
    position: relative;
    // margin-bottom: 24px; // default value but its kind of big
    margin-bottom: 18px;
    border-bottom: 1px solid #e1e4e8;
}


.content-container {
  @extend .float-left;
  // this is very hard to reason about and yet every time i touch this
  // i manage to not document how this works. my basic intuition is as follows:
  // you define the smallest sets first which are then overrided byâ€¦ larger
  // breakpoints?
  // answer: gotta define the sizes in all the diff breakpoints
  // @extend .col-sm-11, .mx-sm-4;
  @extend .col-sm-11;
  @extend .col-md-8;
  @extend .col-lg-6;
  @extend .mb-lg-4;

  @include breakpoint(sm) {
    margin-right: $spacer-4;
    margin-left: $spacer-4;
  }

  @include breakpoint(md) {
    margin-right: $spacer-0;
    margin-left: $spacer-0;
  }
}

.sidebar-container {
  @extend .float-left;
  @extend .col-md-3;
  @extend .col-lg-2;
  @extend .hide-sm, .hide-md;

  @include breakpoint(md) {
    margin-left: $spacer-4;
  }

  @include breakpoint(xl) {
    margin-left: $spacer-0;
    margin-right: $spacer-0;
  }


}

.context-container {
  @extend .float-left;
  @extend .col-lg-3;
  @extend .col-xl-3;
  @include breakpoint(lg) {
    padding-left: $spacer-8;
  }
  @extend .hide-sm, .hide-md;
}


.calendar-container {
  @extend .float-left;
  @extend .col-sm-11;
  @extend .col-md-8;
  @extend .col-lg-9;
  @extend .mb-lg-4;

  @include breakpoint(sm) {
    margin-right: $spacer-4;
    margin-left: $spacer-4;
  }

  @include breakpoint(md) {
    margin-right: $spacer-0;
    margin-left: $spacer-0;
  }

}

// settings
.settings-toc {
  @extend .h3;
  padding-left: 1em !important;
}

// used for rendering entry bodies
.entry-box {
  @extend .Box;
}

// unused
// .entry-edit {
//   padding-top: 12px;
//   padding-right: 12px;
//   padding-bottom: 12px;
//   padding-left: 16px;
//   margin-top: -1px;
//   border-top: 1px solid #e1e4e8;
// }

.entry-box + .entry-box {
  @extend .mt-2;
}

.entry-box + .entry-threaded, .entry-threaded + .entry-box {
  margin-top: 0px !important;
  border-top: 0px;
  border-top-left-radius: 0px;
  border-top-right-radius: 0px;
}
//
// .entry-box + .entry-show {
//   border: 1px solid $gray-400 !important;
//   border-top-left-radius: 2px !important;
//   border-top-right-radius: 2px !important;
// }

.TimelineItem-start {
  @extend .TimelineItem-break;
  border: none;
}

summary::marker {
  padding-bottom: 4px;
}

summary::-webkit-details-marker {
  padding-bottom: 4px;
}

.entry-list-header {
  @extend .text-small;
  @extend .mb-3;

  @extend .text-gray-dark;
}

// prevent controls (edit, fold, etc) from appearing when selecting text
.unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}


// https://stackoverflow.com/a/17030071
// TODO: find a better name, css-truncate is used in primer
.truncate {
  overflow: hidden;
  position: relative;
  max-height: 300px;

  .show-on-fold {
    display: initial;
  }

  .hide-on-fold {
    display: none;
  }
}

.truncate.truncate-more {
    max-height: 180px;
  }


.show-on-fold {
  display: none;
}


.truncate:after{
  content:"";
  height: 75px;
  display: block;
  width: 100%;
  position:absolute;
  background: linear-gradient(transparent, white);
  // background-color:white;
  // opacity: 0.8;
  bottom: -0.3em
}

// for displaying the hide button only on hover
.hide-calendar {
  display: inline;
  visibility: hidden;
  opacity: 0.0;
  -webkit-transition: all 200ms ease-in-out;
  -moz-transition: all 200ms ease-in-out;
  -ms-transition: all 200ms ease-in-out;
  -o-transition: all 200ms ease-in-out;
  transition: all 200ms ease-in-out;
}

.calendar-entry:hover .hide-calendar {
  visibility: visible;
  opacity: 1.0;
  display: inline;
}

// override dark grey in calendar view
table.weekly {
  .next-month, .prev-month {
    &.today {
      background-color: #FFFFC0
    }
    background-color: inherit;
  }
}


// brand
h1.arquivo {
  font-size: 42px;
  a {
    text-decoration: underline black;
    &:hover {
      text-decoration: underline $blue-500;
    }
  }
}

.black-underline {
  text-decoration: underline black;
  &:hover {
    text-decoration: underline $blue-500;
  }
}
